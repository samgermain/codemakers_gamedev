function love.load()
  love.physics.setMeter(64) --the height of a meter our worlds will be 64px
  world = love.physics.newWorld(0, 9.81*64, true) --create a world for the bodies to exist in with horizontal gravity of 0 and vertical gravity of 9.81
 
  --let's create the ground
  ground = {}
  ground.x = 1600/2
  ground.y = 850-50/2
  ground.width = 1700
  ground.height = 50
  ground.body = love.physics.newBody(world, ground.x, ground.y, "static") --remember, the shape (the rectangle we create next) anchors to the body from its center, so we have to move it to (1700/2, 1000-50/2)
  ground.shape = love.physics.newRectangleShape(ground.width, ground.height) --make a rectangle with a width of 1700 and a height of 50
  ground.fixture = love.physics.newFixture(ground.body, ground.shape, 1); --attach shape to body, give it a density of 1. 
  
  
   --let's create a ball
  ball = {}
  ball.x = 1700/2
  ball.y = 1000/2
  ball.radius = 20
  
  ball.body = love.physics.newBody(world, ball.x, ball.y, "dynamic") --place the body in the center of the world and make it dynamic, so it can move around
  ball.shape = love.physics.newCircleShape(ball.radius) --the ball's shape has a radius of 20
  ball.fixture = love.physics.newFixture(ball.body, ball.shape, 1) -- Attach fixture to body and give it a density of 1.
  ball.fixture:setRestitution(0.9) --let the ball bounce 
 
  --let's create a couple blocks to play around with
  block1 = {}
  block1.x = 200
  block1.y = 550
  block1.width = 50
  block1.height = 100
  
  block1.body = love.physics.newBody(world, block1.x, block1.y, "dynamic")
  block1.shape = love.physics.newRectangleShape(block1.width, block1.height)
  block1.fixture = love.physics.newFixture(block1.body, block1.shape, 5) -- A higher density gives it more mass.
 
  block2 = {}
  block2.x = 200
  block2.y = 550
  block2.width = 100
  block2.height = 50
  block2.body = love.physics.newBody(world, block2.x, block2.y, "dynamic")
  block2.shape = love.physics.newRectangleShape(block2.width, block2.height)
  block2.fixture = love.physics.newFixture(block2.body, block2.shape, 1)
  
  --initial graphics setup
  love.graphics.setBackgroundColor(0.41, 0.53, 0.97) --set the background color to a nice blue
  love.window.setMode(1600, 850) --set the window dimensions to 650 by 650
end
 
 
function love.update(dt)
  world:update(dt) --this puts the world into motion
 
  --here we are going to create some keyboard events
  if love.keyboard.isDown("right") then --press the right arrow key to push the ball to the right
    ball.body:applyForce(400, 0)
  elseif love.keyboard.isDown("left") then --press the left arrow key to push the ball to the left
    ball.body:applyForce(-400, 0)
  elseif love.keyboard.isDown("up") then --press the up arrow key to set the ball in the air
    ball.body:setPosition(650/2, 650/2)
    ball.body:setLinearVelocity(0, 0) --we must set the velocity to zero to prevent a potentially large velocity generated by the change in position
  end
end
 
function love.draw()
  love.graphics.setColor(0.28, 0.63, 0.05) -- set the drawing color to green for the ground
  love.graphics.rectangle("fill", 0, ground.y - ground.height/2, ground.width, ground.height) -- draw a "filled in" polygon using the ground's coordinates
	--  These are the grounds coordinates. 		-11650	950	13350	950	13350	1000	-11650	1000
  
  love.graphics.setColor(0.76, 0.18, 0.05) --set the drawing color to red for the ball
  love.graphics.circle("fill", ball.body:getX(), ball.body:getY(), ball.shape:getRadius())
 
  love.graphics.setColor(0.20, 0.20, 0.20) -- set the drawing color to grey for the blocks
  love.graphics.polygon("fill", block1.body:getWorldPoints(block1.shape:getPoints()))
  love.graphics.polygon("fill", block2.body:getWorldPoints(block2.shape:getPoints()))
  print(block1.body:getWorldPoints(block1.shape:getPoints()))
end